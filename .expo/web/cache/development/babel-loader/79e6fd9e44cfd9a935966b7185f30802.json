{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/mnt/c/Users/vitao/git/2020.1-Grupo2-FrontEnd/src/screen/plant/plantView.js\";\nimport React, { Component, Fragment, useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport styles from \"./styles\";\nimport Perfil from \"./perfil\";\nimport Menu from \"./menu\";\nexport default function PlantView() {\n  var enderecoIpv4 = '192.168.15.5';\n  var porta = '2000';\n  var plantID = '5f6a5686ff24eb47d5193274';\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      plant = _useState2[0],\n      setPlant = _useState2[1];\n\n  useEffect(function () {\n    var lerDados = function lerDados() {\n      var dadosHTTP, dadosJson;\n      return _regeneratorRuntime.async(function lerDados$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch(\"http://\" + enderecoIpv4 + \":\" + porta + \"/plant/\" + plantID));\n\n            case 2:\n              dadosHTTP = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(dadosHTTP.json());\n\n            case 5:\n              dadosJson = _context.sent;\n              setPlant(dadosJson.plant);\n              console.log(dadosJson);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    lerDados();\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, React.createElement(Perfil, {\n    foto: plant.profile_picture,\n    nomeComum: plant.common_name,\n    nomeScientifico: plant.scientificName,\n    contador: plant.collection_count,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }), React.createElement(Menu, {\n    usage: plant.usage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }));\n}\n;","map":{"version":3,"sources":["/mnt/c/Users/vitao/git/2020.1-Grupo2-FrontEnd/src/screen/plant/plantView.js"],"names":["React","Component","Fragment","useEffect","useState","styles","Perfil","Menu","PlantView","enderecoIpv4","porta","plantID","plant","setPlant","lerDados","fetch","dadosHTTP","json","dadosJson","console","log","container","profile_picture","common_name","scientificName","collection_count","usage"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,SAApC,EAA+CC,QAA/C,QAA8D,OAA9D;;;;;;;;;;AAGA,OAAOC,MAAP;AACA,OAAOC,MAAP;AACA,OAAOC,IAAP;AAEA,eAAe,SAASC,SAAT,GAAoB;AAC/B,MAAMC,YAAY,GAAG,cAArB;AACA,MAAMC,KAAK,GAAG,MAAd;AACA,MAAMC,OAAO,GAAG,0BAAhB;;AAH+B,kBAILP,QAAQ,CAAC,EAAD,CAJH;AAAA;AAAA,MAIxBQ,KAJwB;AAAA,MAIjBC,QAJiB;;AAM/BV,EAAAA,SAAS,CAAC,YAAI;AACd,QAAMW,QAAQ,GAAG,SAAXA,QAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACWC,KAAK,aAAWN,YAAX,SAA2BC,KAA3B,eAA0CC,OAA1C,CADhB;;AAAA;AACPK,cAAAA,SADO;AAAA;AAAA,+CAEWA,SAAS,CAACC,IAAV,EAFX;;AAAA;AAEPC,cAAAA,SAFO;AAGbL,cAAAA,QAAQ,CAACK,SAAS,CAACN,KAAX,CAAR;AACAO,cAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;;AAJa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAjB;;AAMAJ,IAAAA,QAAQ;AACP,GARQ,EAQP,EARO,CAAT;AASA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIT,MAAM,CAACgB,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAIT,KAAK,CAACU,eAAtB;AACQ,IAAA,SAAS,EAAIV,KAAK,CAACW,WAD3B;AAEQ,IAAA,eAAe,EAAIX,KAAK,CAACY,cAFjC;AAGQ,IAAA,QAAQ,EAAIZ,KAAK,CAACa,gBAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAMI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIb,KAAK,CAACc,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADJ;AAUH;AAAA","sourcesContent":["import React, {Component, Fragment, useEffect, useState} from 'react';\n\nimport { View, Modal, Text, Image, ScrollView, Button, Dimensions, StyleSheet, ImageBackground} from 'react-native';\nimport styles from './styles';\nimport Perfil from './perfil';\nimport Menu from './menu';\n\nexport default function PlantView(){\n    const enderecoIpv4 = '192.168.15.5'; //inserir o endereÃ§o o ip do localhost\n    const porta = '2000'; // inserir a porta em que o backend esta rodando\n    const plantID = '5f6a5686ff24eb47d5193274'; //inserir o id da planta  ser exibido\n    const [plant, setPlant] = useState({})\n\n    useEffect(()=>{\n    const lerDados = async() => {\n        const dadosHTTP = await fetch(`http://${enderecoIpv4}:${porta}/plant/${plantID}`);\n        const dadosJson = await dadosHTTP.json();\n        setPlant(dadosJson.plant); \n        console.log(dadosJson);\n    }\n    lerDados();    \n    },[]);\n    return(\n        <View style = {styles.container}>\n            <Perfil foto = {plant.profile_picture} \n                    nomeComum = {plant.common_name} \n                    nomeScientifico = {plant.scientificName} \n                    contador = {plant.collection_count}>\n            </Perfil>\n            <Menu usage = {plant.usage}/>\n        </View>\n    );\n};"]},"metadata":{},"sourceType":"module"}