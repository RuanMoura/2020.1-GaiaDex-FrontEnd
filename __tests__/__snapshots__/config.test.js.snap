// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Config /> renders everything 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "white",
      "flex": 1,
      "justifyContent": "flex-end",
    }
  }
>
  <View
    style={
      Object {
        "flex": 0.2,
        "flexDirection": "row",
        "justifyContent": "space-between",
        "paddingRight": "8%",
        "width": 750,
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "flexDirection": "row",
          "opacity": 1,
        }
      }
    >
      <Text />
      <Text
        style={
          Object {
            "color": "#242528",
            "fontSize": 32,
          }
        }
      >
        Configurações
      </Text>
    </View>
    <Text />
  </View>
  <View
    style={
      Object {
        "flex": 0.7,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flex": 0.1,
          "flexDirection": "row",
          "justifyContent": "space-between",
          "marginVertical": "3%",
          "width": 625,
        }
      }
    >
      <Text
        style={
          Object {
            "color": "#242528",
            "fontSize": 15,
            "fontWeight": "500",
          }
        }
      >
        Notificação de novo comentário
      </Text>
      <RCTSwitch
        accessibilityRole="switch"
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onTintColor="#81b0ff"
        style={
          Array [
            Object {
              "height": 31,
              "width": 51,
            },
            Object {
              "backgroundColor": "#3e3e3e",
              "borderRadius": 16,
            },
          ]
        }
        thumbTintColor="#f4f3f4"
        tintColor="#767577"
        value={false}
      />
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "flex": 0.1,
          "flexDirection": "row",
          "justifyContent": "space-between",
          "marginVertical": "3%",
          "width": 625,
        }
      }
    >
      <Text
        style={
          Object {
            "color": "#242528",
            "fontSize": 15,
            "fontWeight": "500",
          }
        }
      >
        Notificação de novo tópico
      </Text>
      <RCTSwitch
        accessibilityRole="switch"
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onTintColor="#81b0ff"
        style={
          Array [
            Object {
              "height": 31,
              "width": 51,
            },
            Object {
              "backgroundColor": "#3e3e3e",
              "borderRadius": 16,
            },
          ]
        }
        thumbTintColor="#f4f3f4"
        tintColor="#767577"
        value={false}
      />
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "flex": 0.1,
          "flexDirection": "row",
          "justifyContent": "space-between",
          "marginVertical": "3%",
          "width": 625,
        }
      }
    >
      <Text
        style={
          Object {
            "color": "#242528",
            "fontSize": 15,
            "fontWeight": "500",
          }
        }
      >
        Notificação de likes e dislikes
      </Text>
      <RCTSwitch
        accessibilityRole="switch"
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onTintColor="#81b0ff"
        style={
          Array [
            Object {
              "height": 31,
              "width": 51,
            },
            Object {
              "backgroundColor": "#3e3e3e",
              "borderRadius": 16,
            },
          ]
        }
        thumbTintColor="#f4f3f4"
        tintColor="#767577"
        value={false}
      />
    </View>
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flex": 0.1,
            "flexDirection": "row",
            "justifyContent": "space-between",
            "marginVertical": "3%",
            "width": 625,
          },
          Object {
            "marginTop": "10%",
          },
        ]
      }
    >
      <View>
        <RNGestureHandlerButton
          collapsable={false}
          onGestureEvent={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onHandlerStateChange={[Function]}
          rippleColor={0}
        >
          <View
            accessible={true}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#D6DADF",
                "borderRadius": 10,
                "height": 66.7,
                "justifyContent": "center",
                "opacity": 1,
                "width": 300,
              }
            }
          >
            <Text
              style={
                Object {
                  "fontSize": 12,
                  "textAlign": "center",
                }
              }
            >
              Sair
            </Text>
          </View>
        </RNGestureHandlerButton>
      </View>
      <View>
        <RNGestureHandlerButton
          collapsable={false}
          onGestureEvent={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onHandlerStateChange={[Function]}
          rippleColor={0}
        >
          <View
            accessible={true}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#D6DADF",
                "borderColor": "red",
                "borderRadius": 10,
                "borderWidth": 1,
                "height": 66.7,
                "justifyContent": "center",
                "opacity": 1,
                "width": 300,
              }
            }
          >
            <Text
              style={
                Object {
                  "fontSize": 12,
                  "textAlign": "center",
                }
              }
            >
              Deletar minha conta
            </Text>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>
</View>
`;

exports[`<Config /> renders everything 2`] = `
<View
  style={
    Object {
      "flex": 0.2,
      "flexDirection": "row",
      "justifyContent": "space-between",
      "paddingRight": "8%",
      "width": 750,
    }
  }
>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "flexDirection": "row",
        "opacity": 1,
      }
    }
  >
    <Text />
    <Text
      style={
        Object {
          "color": "#242528",
          "fontSize": 32,
        }
      }
    >
      Configurações
    </Text>
  </View>
  <Text />
</View>
`;
